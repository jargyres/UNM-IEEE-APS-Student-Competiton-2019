#!/bin/bash


DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $DIR


touch $DIR/config.txt

chmod a+x $DIR/config.txt

#configure the BladeRF for setup

#frequency=3085
fr=$1
sampleoffset=5e6
samplefr=$( awk -v a=$sampleoffset -v b=$fr 'BEGIN{print b-a}' )
samplerate=20e6
bandwidth=20e6


pythonFFT="python3 3DFFT.py"

python2DFFT="python3 newFFT.py"

pythonPlot="gnome-terminal -x python3 $DIR/PythonPlot.py"

pythonturn="'python3 BottomTurn10deg.py'"

pythontopturn="python3 TopTurn.py"

pythonreversetopturn="python3 ReverseTopTurn.py"

pythonturntozero="python3 turntozero.py"

pythonReverseTurn="python3 ReverseBottomTurn.py"

pythonCleanData="python3 CleanData.py"

rp="ssh pi@192.168.2.2"

#check at position 0

#initialize 0 degrees for data.csv

eval "bladeRF-cli -d *:serial=fe2c -l $DIR/hostedx115-latest.rbf"


bottomdeg=0

topdeg=0

topturncounter=0

echo "set frequency tx1 $fr" >> $DIR/config.txt
#echo "set agc tx1 off" >> config.txt
#echo "set gain tx1 30" >> config.txt
echo "set gain tx 60" >> $DIR/config.txt
echo "set bandwidth tx1 $bandwidth" >> $DIR/config.txt
echo "set samplerate tx1 $samplerate" >> $DIR/config.txt
echo "tx config file=$DIR/testpythonfile.dat format=bin repeat=0" >> $DIR/config
.txt
echo "set frequency rx $samplefr" >> $DIR/config.txt
## echo "set agc rx1 off" >> config2.txt
echo "set gain rx1 30" >> $DIR/config.txt
#echo "cal lms" >> /home/john/FinalScripts/config.txt
#echo "cal dc rx" >> /home/john/FinalScripts/config.txt
echo "set bandwidth rx $bandwidth" >> $DIR/config.txt
echo "set samplerate rx $samplerate" >> $DIR/config.txt
echo "rx config file=$DIR/3d'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 format=bin n=2000" >> $DIR/config.txt
echo "tx start;" >> $DIR/config.txt
echo "tx" >> $DIR/config.txt
echo "tx wait 250; tx stop" >> $DIR/config.txt
echo "rx start;" >> $DIR/config.txt
echo "rx" >> $DIR/config.txt
echo "rx wait" >> $DIR/config.txt
echo "exit" >> $DIR/config.txt

pythonCreateSignal="python3 $DIR/CreateSignal.py "\""$DIR/testpythonfile"\"" $fr $samplerate"



#generate the transmission file, transmit, and receive 5 MHz offset from the transmission
eval $pythonCreateSignal; bladeRF-cli -d *:serial=fe2c -s $DIR/config.txt; rm $DIR/config.txt; rm $DIR/testpythonfile.dat
	


eval "$pythonFFT 3d'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 $bottomdeg $topdeg $fr" 

#eval "$python2DFFT 3d'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 $bottomdeg $fr"

rm $DIR/csvfile.csv
	
#rm radPattern*

eval $rp $pythonturn

eval $pythonPlot

((bottomdeg+=10))

while [ $topdeg -le 180 ]
do

	while [ $bottomdeg -le 360 ]
	do
		echo "set frequency tx1 $fr" >> $DIR/config.txt
		#echo "set agc tx1 off" >> config.txt
		#echo "set gain tx1 30" >> config.txt
		echo "set gain tx 60" >> $DIR/config.txt
		echo "set bandwidth tx1 $bandwidth" >> $DIR/config.txt
		echo "set samplerate tx1 $samplerate" >> $DIR/config.txt
		echo "tx config file=$DIR/testpythonfile.dat format=bin repeat=0" >>
		$DIR/config.txt
		echo "set frequency rx $samplefr" >> $DIR/config.txt
		#echo "set agc rx1 off" >> config2.txt
		#echo "set gain rx1 30" >> config2.txt
		echo "set gain rx1 30" >> $DIR/config.txt
		echo "set bandwidth rx $bandwidth" >> $DIR/config.txt
		echo "set samplerate rx $samplerate" >> $DIR/config.txt
		echo "rx config file=$DIR/ThreeDimensional'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 format=bin n=2000" >> $DIR/config.txt
		echo "tx start;" >> $DIR/config.txt
		echo "tx" >> $DIR/config.txt
		echo "tx wait 250; tx stop" >> $DIR/config.txt
		echo "rx start;" >> $DIR/config.txt
		echo "rx" >> $DIR/config.txt
		echo "rx wait" >> $DIR/config.txt
		echo "exit" >> $DIR/config.txt


		pythonCreateSignal="python3 $DIR/CreateSignal.py "\""$DIR/testpythonfile"\"" $fr $samplerate"



		#generate the transmission file, transmit, and receive 5 MHz offset from the transmission
		eval $pythonCreateSignal; bladeRF-cli -d *:serial=fe2c -s $DIR/config.txt; rm $DIR/config.txt; rm $DIR/testpythonfile.dat

		eval $rp $pythonturn		
		
		eval "$pythonFFT ThreeDimensional'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 $bottomdeg $topdeg $fr" 
#		eval "$python2DFFT ThreeDimensional'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 $bottomdeg $fr"
		rm $DIR/ThreeDimensional*

		rm $DIR/csvfile.csv
	
		((bottomdeg+=10))
		
	
	done

	eval $rp $pythonReverseTurn

	eval $rp $pythonReverseTurn

	eval $rp $pythonturntozero
	
	bottomdeg=0
	
	eval $rp $pythontopturn	

	rm $DIR/data.csv

	
	((topdeg+=15))
	((topturncounter+=1))


	if [ $topdeg -le 180 ]
	then

		echo "set frequency tx1 $fr" >> $DIR/config.txt
		#echo "set agc tx1 off" >> config.txt
		#echo "set gain tx1 30" >> config.txt
		echo "set gain tx 60" >> $DIR/config.txt
		echo "set bandwidth tx1 $bandwidth" >> $DIR/config.txt
		echo "set samplerate tx1 $samplerate" >> $DIR/config.txt
		echo "tx config file=$DIR/testpythonfile.dat format=bin repeat=0" >> $DIR/config.txt
		echo "set frequency rx $samplefr" >> $DIR/config.txt
		## echo "set agc rx1 off" >> config2.txt
		echo "set gain rx1 30" >> $DIR/config.txt
	#	echo "cal lms" >> /home/john/FinalScripts/config.txt
	#	echo "cal dc rx" >> /home/john/FinalScripts/config.txt
		echo "set bandwidth rx $bandwidth" >> $DIR/config.txt
		echo "set samplerate rx $samplerate" >> $DIR/config.txt
		echo "rx config file=$DIR/ThreeDimensional'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 format=bin n=2000" >> $DIR/config.txt
		echo "tx start;" >> $DIR/config.txt
		echo "tx" >> $DIR/config.txt
		echo "tx wait 250; tx stop" >> $DIR/config.txt
		echo "rx start;" >> $DIR/config.txt
		echo "rx" >> $DIR/config.txt
		echo "rx wait" >> $DIR/config.txt
		echo "exit" >> $DIR/config.txt

		pythonCreateSignal="python3 $DIR/CreateSignal.py "\""$DIR/testpythonfile"\"" $fr $samplerate"



		#generate the transmission file, transmit, and receive 5 MHz offset from the transmission
		eval $pythonCreateSignal; bladeRF-cli -d *:serial=fe2c -s $DIR/config.txt; rm $DIR/config.txt; rm $DIR/testpythonfile.dat
	


		eval "$pythonFFT ThreeDimensional'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 $bottomdeg $topdeg $fr" 

		rm csvfile.csv

		eval $pythonPlot

		((bottomdeg+=10))
	
	fi
	

	


done



counter2=0

eval "$pythonFFT 3d'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11 $counter2 $counter2 $fr"

rm $DIR/csvfile.csv

rm 3d'"$bottomdeg"'_bottom'"$topdeg"'_top.sc16q11

eval $pythonCleanData

#matlab="/usr/local/MATLAB/R2018b/bin/matlab"

#matlabplot="$matlab -nodesktop -nosplash -r \"Plot3d;\" | tail -n +11"



#eval $rp $pythonReverseTurn

#eval $rp $pythonReverseTurn

#eval $rp $pythonturntozero

